name: Build Status

# Define the git action and branches where the process runs on
on: 
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      
      # Checkout the latest code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Setup which version of Python to use
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Display the Python version
      - name: Display the Python version being used
        run: python -c "import sys; print(sys.version)"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==4.0.1 pytest==7.0.1 click==7.1.2 requests==2.26.0 rich==11.2.0
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      # Check Python files against the style conventions defined in PEP8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --ignore=E501,E127,E128,W605 --max-complexity=10 --max-line-length=120 --statistics
          # flake8 . --ignore=E501,E127,E128,W605
        continue-on-error: true
      
      # Runs unittest 
      - name: Test with pytest
        run: |
          python -m unittest discover -s tests -p "test_*.py"
          # python -m unittest tests/test_restconf_cli.py
